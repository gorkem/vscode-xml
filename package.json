{
  "name": "vscode-xml",
  "displayName": "XML",
  "description": "XML Language Support by Red Hat",
  "version": "0.14.0",
  "author": "Red Hat",
  "publisher": "redhat",
  "icon": "icons/icon128.png",
  "license": "EPL-1.0",
  "bugs": "https://github.com/redhat-developer/vscode-xml/issues",
  "preview": true,
  "keywords": [
    "xml",
    "xsl",
    "xsd",
    "dtd"
  ],
  "xmlServer": {
    "version": "0.13.1"
  },
  "engines": {
    "vscode": "^1.37.0"
  },
  "activationEvents": [
    "onLanguage:xml",
    "onLanguage:xsl",
    "onCommand:xml.open.docs"
  ],
  "main": "./dist/extension",
  "scripts": {
    "preinstall": "npx npm-force-resolutions",
    "vscode:prepublish": "webpack --mode production",
    "compile": "webpack --mode none",
    "watch": "webpack --mode development --watch --info-verbosity verbose",
    "test-compile": "tsc -p ./",
    "pretest": "npm run test-compile",
    "test": "node ./out/test/runTest.js",
    "tslint": "./node_modules/.bin/tslint -p .",
    "build": "./node_modules/.bin/gulp build",
    "build-server": "./node_modules/.bin/gulp build_server"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/redhat-developer/vscode-xml"
  },
  "categories": [
    "Programming Languages",
    "Linters",
    "Formatters",
    "Snippets"
  ],
  "resolutions": {
    "minimist": "^1.2.5",
    "yargs-parser": "^19.0.4"
  },
  "devDependencies": {
    "@types/fs-extra": "^8.0.0",
    "@types/node": "^10.14.16",
    "@types/vscode": "^1.37.0",
    "gulp": "^4.0.2",
    "gulp-rename": "^1.4.0",
    "gulp-tslint": "^8.1.3",
    "minimist": ">=1.2.5",
    "serialize-javascript": "^4.0.0",
    "ts-loader": "^6.0.1",
    "tslint": "^5.12.1",
    "typescript": "^3.4.1",
    "typescript-tslint-plugin": "^0.3.1",
    "vscode-test": "^1.2.0",
    "webpack": "^4.44.1",
    "webpack-cli": "^3.3.12"
  },
  "dependencies": {
    "fs-extra": "^8.1.0",
    "expand-home-dir": "^0.0.3",
    "find-java-home": "0.2.0",
    "glob": "^7.1.4",
    "path-exists": "^4.0.0",
    "vscode-languageclient": "^5.2.1"
  },
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "XML configuration",
      "properties": {
        "xml.java.home": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "markdownDescription": "Specifies the folder path to the JDK (8 or more recent) used to launch the XML Language Server.\nOn Windows, backslashes must be escaped, i.e.\n`\"xml.java.home\": \"C:\\\\Program Files\\\\Java\\\\jdk1.8.0_161\"`. For more information, please refer to [this document](command:xml.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22java-home%22%7D%5D).",
          "scope": "window"
        },
        "xml.server.vmargs": {
          "type": [
            "string",
            "null"
          ],
          "default": "-Xmx64M -XX:+UseG1GC -XX:+UseStringDeduplication",
          "markdownDescription": "Specifies extra VM arguments used to launch the XML Language Server. Eg. use `-Xmx1G  -XX:+UseG1GC -XX:+UseStringDeduplication` to bypass class verification, increase the heap size to 1GB and enable String deduplication with the G1 Garbage collector. Please refer to [this document](command:xml.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22server-vm-arguments%22%7D%5D) for more information on the Java server arguments.",
          "scope": "window"
        },
        "xml.server.workDir": {
          "type": "string",
          "default": "~/.lemminx",
          "markdownDescription": "Set a custom folder path for cached XML Schemas. An absolute path is expected, although the `~` prefix (for the user home directory) is supported. Default is `~/.lemminx`. Please refer to the [cache documentation](command:xml.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22server-cache-path%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xml.trace.server": {
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "markdownDescription": "Traces the communication between VS Code and the XML language server in the Output view. Default is `off`.",
          "scope": "window"
        },
        "xml.logs.client": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Enable/disable logging to the Output view. Default is `true`."
        },
        "xml.catalogs": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "markdownDescription": "Register XML catalog files. See how to configure [XML catalog with XSD](command:xml.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22xml-catalog-with-xsd%22%7D%5D) or [XML catalog with DTD](command:xml.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22xml-catalog-with-dtd%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xml.fileAssociations": {
          "type": "array",
          "default": [],
          "items": {
            "type": "object",
            "properties": {
              "systemId": {
                "type": "string",
                "description": "The path or URL to the XML schema (XSD or DTD)."
              },
              "pattern": {
                "type": "string",
                "markdownDescription": "File glob pattern. Example: `**/*.Format.ps1xml`\n\nMore information on the glob syntax: https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob"
              }
            },
            "required": [
              "systemId",
              "pattern"
            ]
          },
          "markdownDescription": "Allows XML schemas/ DTD to be associated to file name patterns. Please refer to [XML file association with XSD](command:xml.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22xml-file-association-with-xsd%22%7D%5D) or [XML file association with DTD](command:xml.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22xml-file-association-with-dtd%22%7D%5D) for more information. \n\nExample:\n```json\n[{\n  \"systemId\": \"path/to/file.xsd\",\n  \"pattern\": \"file1.xml\"\n},\n{\n  \"systemId\": \"http://www.w3.org/2001/XMLSchema.xsd\",\n  \"pattern\": \"**/*.xsd\"\n}]\n```",
          "scope": "window"
        },
        "xml.format.enabled": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Enable/disable ability to format document. Default is `true`.",
          "scope": "window"
        },
        "xml.format.emptyElements": {
          "type": "string",
          "enum": [
            "ignore",
            "collapse",
            "expand"
          ],
          "default": "ignore",
          "markdownDescription": "Expand/collapse empty elements. Default is `ignore`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatemptyelements%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xml.format.enforceQuoteStyle": {
          "type": "string",
          "enum": [
            "preferred",
            "ignore"
          ],
          "markdownEnumDescriptions": [
            "Use preferred quote style set by `xml.preferences.quoteStyle` when formatting.",
            "Ignore quote style formatting."
          ],
          "default": "ignore",
          "markdownDescription": "Enforce `preferred` quote style (set by `#xml.preferences.quoteStyle#`) or `ignore` quote style when formatting. Default is `ignore`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatenforcequotestyle%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xml.format.joinCDATALines": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Set to `true` to join lines in CDATA content during formatting. Default is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatjoincdatalines%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xml.format.joinCommentLines": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Join comment content on format. Default is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatjoincommentlines%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xml.format.joinContentLines": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Normalize the whitespace of content inside an element. Newlines and excess whitespace are removed. Default is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatjoincontentlines%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xml.format.preserveAttributeLineBreaks": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Preserve line breaks that appear before and after attributes. This setting is overridden if `#xml.format.splitAttributes#` is set to `true`. Default is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatpreserveattributelinebreaks%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xml.format.preserveEmptyContent": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Preserve empty content/whitespace in a tag. Default is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatpreserveemptycontent%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xml.format.preservedNewlines": {
          "type": "integer",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "default": 2,
          "markdownDescription": "Preserve new lines that separate tags. The value represents the maximum number of new lines per section. A value of 0 removes all new lines. Default is `2`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatpreservednewlines%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xml.format.spaceBeforeEmptyCloseTag": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Insert space before end of self closing tag. \nExample:\n  ```<tag/> -> <tag />```. Default is `true`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatspacebeforeemptyclosetag%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xml.format.xsiSchemaLocationSplit": {
          "type": "string",
          "enum": [
            "onElement",
            "onPair",
            "none"
          ],
          "markdownEnumDescriptions": [
            "Put a new line after each namespace and URI, arranging them into one column.",
            "Put a new line after each URI, arranging the content into pairs of namespace and URI.",
            "Ignore `xsi:schemaLocation` content formatting."
          ],
          "default": "none",
          "markdownDescription": "Split `xsi:schemaLocation` content. Default is `none`. Please see [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatxsischemalocationsplit%22%7D%5D) for more information",
          "scope": "window"
        },
        "xml.format.splitAttributes": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Split multiple attributes each onto a new line. Default is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatsplitattributes%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xml.preferences.quoteStyle": {
          "type": "string",
          "enum": [
            "single",
            "double"
          ],
          "default": "double",
          "markdownDescription": "Preferred quote style to use for completion: `single` quotes, `double` quotes. Default is `double`.",
          "scope": "window"
        },
        "xml.completion.autoCloseTags": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Enable/disable autoclosing of XML tags. Default is `true`. \n\nIMPORTANT: Turn off `#editor.autoClosingTags#` for this to work.",
          "scope": "window"
        },
        "xml.codeLens.enabled": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Enable/disable XML CodeLens. Default is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22CodeLens%22%2C%22section%22%3A%22Code%20Lens%22%7D%5D) for information about CodeLens features"
        },
        "xml.preferences.showSchemaDocumentationType": {
          "type": "string",
          "default": "all",
          "enum": [
            "documentation",
            "appinfo",
            "all",
            "none"
          ],
          "markdownEnumDescriptions": [
            "Documentation comes from the `xs:documentation` element.",
            "Documentation comes from the `xs:appinfo` element.",
            "Documentation comes from the `xs:documentation` and `xs:appinfo` elements.",
            "Displays no documentation."
          ],
          "markdownDescription": "Specifies the source of the XML schema documentation displayed on hover and completion. Default is `all`. Please see [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22documentation-type%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xml.validation.enabled": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Enable/disable all validation. Default is `true`.",
          "scope": "window"
        },
        "xml.validation.schema": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Enable/disable schema based validation. Default is `true`. Ignored if `#xml.validation.enabled#` is set to `false`",
          "scope": "window"
        },
        "xml.validation.disallowDocTypeDecl": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Enable/disable if a fatal error is thrown if the incoming document contains a DOCTYPE declaration. Default is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22disallow-doc-type-declarations%22%7D%5D) for more information",
          "scope": "window"
        },
        "xml.validation.resolveExternalEntities": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Enable/disable resolve of external entities. Default is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22resolve-external-entities%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xml.validation.noGrammar": {
          "type": "string",
          "enum": [
            "ignore",
            "hint",
            "info",
            "warning",
            "error"
          ],
          "default": "hint",
          "markdownDescription": "The message severity when a document has no associated grammar. Default is `hint`.",
          "scope": "window"
        },
        "xml.symbols.enabled": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Enable/disable document symbols (Outline). Default is `true`. No symbols are given if `\"xml.symbol.enabled\": false`.",
          "scope": "window"
        },
        "xml.symbols.excluded": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "markdownDescription": "Disable document symbols (Outline) for the given file name patterns. Updating file name patterns does not automatically reload the Outline view for the relevant file(s). Each file must either be reopened or changed, in order to trigger an Outline view reload.\n\nExample:\n```\n[\n \"**/*LargeFile.xml\"\n]```.",
          "scope": "window"
        },
        "xml.symbols.maxItemsComputed": {
          "type": "integer",
          "default": 5000,
          "markdownDescription": "The maximum number of outline symbols and folding regions computed (limited for performance reasons). Default is `5000`."
        },
        "xml.symbols.showReferencedGrammars": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Show referenced grammars in the Outline. Default is `true`.",
          "scope": "window"
        },
        "xml.extension.jars": {
          "type": "array",
          "default": [],
          "markdownDescription": "An array of paths to JARs that should be contributed to the LemMinX classpath. The paths can include glob patterns. This is intended to be used as a tool for developing extensions to vscode-xml. Please see [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22extension-jars%22%7D%5D) for more information",
          "scope": "window"
        }
      }
    },
    "configurationDefaults": {
      "[xml]": {
        "editor.autoClosingBrackets": "never",
        "files.trimFinalNewlines": true,
        "files.trimTrailingWhitespace": false
      }
    },
    "languages": [
      {
        "id": "xml",
        "extensions": [
          ".ent",
          ".mod"
        ]
      }
    ],
    "jsonValidation": [
      {
        "fileMatch": "package.json",
        "url": "./schemas/package.schema.json"
      }
    ]
  }
}
